@using HostnamePlus.Models
@model HostnamePlus.Models.IndexModel
@{
    ViewData["title"] = "Hostname+";
    Layout = "~/Pages/_Layout.cshtml";
    Model.StartProxyIpsHostNameResolution();
}
@section Scripts {
    <script>
        var otherIpAPIURL = "@Model.MakeOtherIpAPIURL()";
        var otherIpType = "@Model.GetOtherIpType()";
    </script>
}
@section DevelopmentScripts {
    <script src="~/js/GetOtherIp.js"></script>
}
@section ProductionScripts {
    <script src="~/js/GetOtherIp.min.js"></script>
}

<h2 class="sectionHeading">Hostname</h2>
<span class='versionLabel'>@Model.GetIpType(): </span>@Model.HostName<br />
<span id="OtherHostname"></span>
@foreach (IpInfoModel ipInfo in Model.GetProxiedIpsInfo())
{
    <span class='versionLabel'>X-Forwarded-For: </span>@await ipInfo.GetHostNameAsync()<br />
}

<h2 class="sectionHeading">IP</h2>
<span class='versionLabel'>@Model.GetIpType(): </span>@Model.IP<br />
<span id="OtherAddress"></span>
@foreach (IpInfoModel ipInfo in Model.GetProxiedIpsInfo())
{
    <span class='versionLabel'>X-Forwarded-For: </span>@ipInfo.IpString<br />
}

<h2 class="sectionHeading">User Agent</h2>
@Model.GetUserAgent()
